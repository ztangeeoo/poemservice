buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        dependencies { classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5" }
    }
}

assert JavaVersion.current().java8Compatible:
        "At least Java $javaVersion is required, current JVM is ${JavaVersion.current()}"

ext {
    def envArg = 'projectEnv'
    def projectEnvList = ['local','developing', 'staging', 'product','proxia', 'pro']
    def hasEnvProp = projectEnvList.contains(project.properties.get(envArg))
    if (!hasEnvProp) {
        println """
    ==> missing: `$envArg` with `-P$envArg` option one of ${projectEnvList.toListString()}
    ==> example: `-P$envArg=developing`"""

        projectEnv = 'local'

        println """    ==> use default project env: ${project[envArg]}
        """
    } else {
        println """
    ==> use project env: ${project.properties.get(envArg)}
        """
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'org.sonarqube'

war {
    baseName = 'poem'
}
processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url "https://plugins.gradle.org/m2/" }
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile("org.apache.httpcomponents:httpclient")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compile("net.logstash.logback:logstash-logback-encoder:4.11")
    compile("org.bouncycastle:bcprov-jdk15on:1.54")
    compile("net.sf.json-lib:json-lib:2.4:jdk15")
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

}
